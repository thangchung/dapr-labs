{
    "name": "Fermyon Spin",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    // "image": "ghcr.io/fermyon/workshops/dev-container:20230920-075415-ge7406ad",
    "build": {
        "dockerfile": "Dockerfile"
    },
    "features": {
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
        "ghcr.io/dapr/cli/dapr-cli:0": {
            "version": "1.11.0"
        },
        "ghcr.io/devcontainers/features/common-utils:2": {
            "configureZshAsDefaultShell": true
        }
    },

    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined",
        "--privileged",
        "--init"
    ],

    "otherPortsAttributes": {
        "onAutoForward": "ignore"
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "mutantdino.resourcemonitor",
                "humao.rest-client",
                "rust-lang.rust-analyzer",
                "golang.Go",
                "ms-dotnettools.vscode-dotnet-runtime",
                "ms-dotnettools.csharp",
                "alexcvzz.vscode-sqlite",
                "qwtel.sqlite-viewer",
                "bytecodealliance.wit-idl",
                "ms-vscode.makefile-tools"
            ]
        },
        // Use 'mounts' to make the cargo cache persistent in a Docker Volume.
        // "mounts": [
        // 	{
        // 		"source": "devcontainer-cargo-cache-${devcontainerId}",
        // 		"target": "/usr/local/cargo",
        // 		"type": "volume"
        // 	}
        // ]
        // Use 'forwardPorts' to make a list of ports inside the container available locally.
        "forwardPorts": [
            3000
        ]
        // Use 'postCreateCommand' to run commands after the container is created.
        // "postCreateCommand": "rustc --version",
        // Configure tool-specific properties.
        // "customizations": {},
        // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
        // "remoteUser": "root"
    }
}